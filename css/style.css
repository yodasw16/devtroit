@charset "UTF-8";
/* ========================================================================== Your project! ========================================================================== */
/* Don't write any css in here, just import your partials. This will compile to css/style.css */
/* Import Compass and Compass plugins. */
/* Import your variables and Scales. */
/* ========================================================================== Variables ========================================================================== */
/* These variables give you access to change many of the values in Scales. You should also add your own project specific variables to this file. Some values are in px for familiarity, but are converted to em. */
/* Base font and line height for vertical rhythm. */
/* Modular Scale  Instead of setting arbitrary values for font sizes, padding, widths, etc. we can use values up and down our modular scale which have meaning in relation to one another.  Don't be scared. Start here: http://thesassway.com/projects/modular-scale  */
/* At 16px $base-font-size your available modular scale values are:  ms(-5)  =   8px ms(-4)  =   9px ms(-3)  =  10px ms(-1)  =  12px ms(0)   =  16px ms(1)   =  18px ms(2)   =  21px ms(3)   =  24px ms(4)   =  28px ms(5)   =  32px ms(6)   =  38px ms(7)   =  43px ms(8)   =  51px ms(9)   =  57px ms(10)  =  67px  */
/* This will output the modular scale values when you compile. Comment out to hide. */
/* A good primer on Compass Vertical Rhythm. Read this before you get lost: http://atendesigngroup.com/blog/vertical-rhythm-compass */
/* line 61, /Library/Ruby/Gems/1.8/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss */
* html { font-size: 100%; }

/* line 64, /Library/Ruby/Gems/1.8/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/typography/_vertical_rhythm.scss */
html { font-size: 16px; line-height: 1.5em; }

/** Responsive design breakpoints  Scales is a mobile-first framework, so it needs to know when you want to begin applying "non-mobile" styles to the design patterns.  It is not advisable to set breakpoints in responsive designs based on specific device widths. Instead, breakpoints should be applied when your content begins to look awkward. If there are other widths that you need to specifically support and a named variable makes sense, feel free to add it here (ex. $desk-start: 64.0625em; // 1025px ).  Using ems instead of px allows your breakpoints to be relative to your $base-font-size.  Usage: @media screen and (min-width: $palm-end) { [Styles Here] } */
/* Font-sizes in pixels. */
/* Link state colors. */
/* Easier way to declare your font stack. */
/* Color variables - You should change these! */
/* ========================================================================== Scales ========================================================================== */
/*  Copyright (C) 2012 Dave Gillhespy  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  */
/* Scales wouldn't be possible without the amazing work of Harry Roberts (http://csswizardry.com/) on Inuit.css (https://github.com/csswizardry/inuit.css). A number of the design patterns and techniques in Scales were borrowed from Inuit.css. */
/* ========================================================================== !!! WARNING !!! ========================================================================== */
/* You shouldn't modify anything here, other than commenting out patterns that you don't need. Everything here is simplified as much as possible so that you don't have to remove anything.  Scales doesn't make any design decisions for you. To give design to these elements and patterns simply create your own partials and extend these styles. I recommend naming your partials the same as these for the sake of consistency in your project. */
/* ========================================================================== Imports ========================================================================== */
/* These are basic utility styles */
/* ========================================================================== Functions ========================================================================== */
/* Declare your modular-scale values in ems instead of pixels when using them  outside of a vertical-rhythm mixin. */
/* ========================================================================== Mixins ========================================================================== */
/* If you want to force text to truncate rather than wrap to 2 lines. */
/* normalize.css v2.0.1 | MIT License | git.io/normalize */
/* ========================================================================== HTML5 display definitions ========================================================================== */
/* Corrects `block` display not defined in IE 8/9. */
/* line 21, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section, summary { display: block; }

/* Corrects `inline-block` display not defined in IE 8/9. */
/* line 31, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
audio, canvas, video { display: inline-block; }

/* Prevents modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
/* line 40, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
audio:not([controls]) { display: none; height: 0; }

/* Addresses styling for `hidden` attribute not present in IE 8/9. */
/* line 49, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
[hidden] { display: none; }

/* ========================================================================== Base ========================================================================== */
/* 1. Sets default font family to sans-serif. 2. Prevents iOS text size adjust after orientation change, without disabling user zoom. */
/* line 63, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
html { font-family: sans-serif; /* 1 */ -webkit-text-size-adjust: 100%; /* 2 */ -ms-text-size-adjust: 100%; /* 2 */ }

/* Removes default margin. */
/* line 73, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
body { margin: 0; }

/* ========================================================================== Links ========================================================================== */
/* Addresses `outline` inconsistency between Chrome and other browsers. */
/* line 85, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
a:focus { outline: thin dotted; }

/* Improves readability when focused and also mouse hovered in all browsers. */
/* line 94, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
a:active, a:hover { outline: 0; }

/* ========================================================================== Typography ========================================================================== */
/* Addresses `h1` font sizes within `section` and `article` in Firefox 4+, Safari 5, and Chrome. */
/* line 107, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
h1 { font-size: 2em; }

/* Addresses styling not present in IE 8/9, Safari 5, and Chrome. */
/* line 115, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
abbr[title] { border-bottom: 1px dotted; }

/* Addresses style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
/* line 124, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
b, strong { font-weight: bold; }

/* Addresses styling not present in Safari 5 and Chrome. */
/* line 132, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
dfn { font-style: italic; }

/* Addresses styling not present in IE 8/9. */
/* line 140, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
mark { background: #ff0; color: #000; }

/* Corrects font family set oddly in Safari 5 and Chrome. */
/* line 153, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
code, kbd, pre, samp { font-family: monospace, serif; font-size: 1em; }

/* Improves readability of pre-formatted text in all browsers. */
/* line 162, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; }

/* Sets consistent quote types. */
/* line 172, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
q { quotes: "\201C" "\201D" "\2018" "\2019"; }

/* Addresses inconsistent and variable font size in all browsers. */
/* line 180, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
small { font-size: 80%; }

/* Prevents `sub` and `sup` affecting `line-height` in all browsers. */
/* line 189, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

/* line 196, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
sup { top: -0.5em; }

/* line 200, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
sub { bottom: -0.25em; }

/* ========================================================================== Embedded content ========================================================================== */
/* Removes border when inside `a` element in IE 8/9. */
/* line 212, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
img { border: 0; }

/* Corrects overflow displayed oddly in IE 9. */
/* line 220, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
svg:not(:root) { overflow: hidden; }

/* ========================================================================== Figures ========================================================================== */
/* Addresses margin not present in IE 8/9 and Safari 5. */
/* line 232, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
figure { margin: 0; }

/* ========================================================================== Forms ========================================================================== */
/* Define consistent border, margin, and padding. */
/* line 244, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/* 1. Corrects color not being inherited in IE 8/9. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
/* line 255, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/* 1. Corrects font family not being inherited in all browsers. 2. Corrects font size not being inherited in all browsers. 3. Addresses margins set differently in Firefox 4+, Safari 5, and Chrome */
/* line 269, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
button, input, select, textarea { font-family: inherit; /* 1 */ font-size: 100%; /* 2 */ margin: 0; /* 3 */ }

/* Addresses Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
/* line 281, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
button, input { line-height: normal; }

/* 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Corrects inability to style clickable `input` types in iOS. 3. Improves usability and consistency of cursor style between image-type `input` and others. */
/* line 296, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/* Re-set default cursor for disabled elements. */
/* line 306, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
button[disabled], input[disabled] { cursor: default; }

/* 1. Addresses box sizing set to `content-box` in IE 8/9. 2. Removes excess padding in IE 8/9. */
/* line 316, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/* 1. Addresses `appearance` set to `searchfield` in Safari 5 and Chrome. 2. Addresses `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof). */
/* line 327, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ -moz-box-sizing: content-box; -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box; }

/* Removes inner padding and search cancel button in Safari 5 and Chrome on OS X. */
/* line 340, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/* Removes inner padding and border in Firefox 4+. */
/* line 349, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/* 1. Removes default vertical scrollbar in IE 8/9. 2. Improves readability and alignment in all browsers. */
/* line 359, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
textarea { overflow: auto; /* 1 */ vertical-align: top; /* 2 */ }

/* ========================================================================== Tables ========================================================================== */
/* Remove most spacing between table cells. */
/* line 372, /Users/dgillhespy/projects/devtroit/scales/utilities/_normalize.scss */
table { border-collapse: collapse; border-spacing: 0; }

/* ========================================================================== Reset ========================================================================== */
/* Most of this is borrowed from csswizardry.com/2011/10/reset-restarted. */
/* Set all elements to use "box-sizing: border-box;" Thanks to paulirish.com/2012/box-sizing-border-box-ftw. */
/* line 15, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
*, *:before, *:after { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; }

/* Remove padding and margins. */
/* line 28, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
h1, h2, h3, h4, h5, h6, p, blockquote, pre, dl, dd, ol, ul, form, fieldset, legend, table, th, td, caption, hr { margin: 0; padding: 0; }

/* Give a help cursor to elements that give extra info on ":hover". */
/* line 36, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
abbr[title], dfn[title] { cursor: help; }

/* Fixing small so it doesn't break vertical rhythm. */
/* line 43, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
small { font-size: 0.75em; line-height: 2em; }

/* So that "alt" text is visually offset if images don't load. */
/* line 50, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
img { font-style: italic; }

/* Give form elements some cursor interactions. */
/* line 60, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
label, button, select, option { cursor: pointer; }

/* line 67, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
.text-input:active, .text-input:focus, textarea:active, textarea:focus { cursor: text; outline: none; }

/* Get rid of all the form input styles and set the font size to match the $base-font-size; */
/* line 75, /Users/dgillhespy/projects/devtroit/scales/utilities/_reset.scss */
.text-input, textarea { -webkit-appearance: none; -moz-appearance: none; appearance: none; font-size: 1em; line-height: 1.5em; padding: 0; margin: 0; border: 0; -webkit-box-shadow: inset 0 1px 0 black, inset 1px 0px 0 black, inset -1px 0px 0 black, inset 0px -1px 0 black; -moz-box-shadow: inset 0 1px 0 black, inset 1px 0px 0 black, inset -1px 0px 0 black, inset 0px -1px 0 black; box-shadow: inset 0 1px 0 black, inset 1px 0px 0 black, inset -1px 0px 0 black, inset 0px -1px 0 black; }

/* ========================================================================== Spacing ========================================================================== */
/* Some default vertical spacing for elements so they follow the vertical rhythm of the page. */
/* Base elements */
/* line 23, /Users/dgillhespy/projects/devtroit/scales/utilities/_spacing.scss */
h1, h2, h3, h4, h5, h6, hgroup, ul, ol, dl, blockquote, p, address, table, fieldset, figure, pre, .media, .island, .islet { margin-bottom: 1.5em; }
/* line 26, /Users/dgillhespy/projects/devtroit/scales/utilities/_spacing.scss */
.islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet ul, .islet ol, .islet dl, .islet blockquote, .islet p, .islet address, .islet table, .islet fieldset, .islet figure, .islet pre, .islet .media, .islet .island, .islet .islet { margin-bottom: 0.75em; }

/* Where `margin-left` is concerned we want to try and indent certain elements by a consistent amount. */
/* line 35, /Users/dgillhespy/projects/devtroit/scales/utilities/_spacing.scss */
ul, ol, dd { margin-left: 2em; }

/* These are the base structure styles for standard HTML elements */
/* ========================================================================== Styles from HTML5 Boilerplate - h5bp.com ========================================================================== */
/* Well, except for this first bit. */
/* line 7, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
html { font: Calibri, Candara, "Gill Sans", "Gill Sans MT", sans-serif; overflow-y: scroll; min-height: 100%; }

/* Now the boilerplate stuff. */
/* line 16, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
html, body, button, input, select, textarea { color: #333333; }

/* line 21, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
::-moz-selection { background: #4F89A1; color: #fff; text-shadow: none; }

/* line 27, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
::selection { background: #4F89A1; color: #fff; text-shadow: none; }

/* line 34, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
hr { display: block; height: 1px; border: 0; border-top-style: solid; border-top-width: 0.0625em; padding-top: 1.4375em; border-color: #ccc; }

/* line 44, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
img { vertical-align: middle; }

/* line 49, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
fieldset { border: 0; margin: 0; padding: 0; }

/* line 56, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
textarea { resize: vertical; }

/* line 61, /Users/dgillhespy/projects/devtroit/scales/base/_boilerplate.scss */
.chromeframe { margin: 0.2em 0; background: #ccc; color: #000; padding: 0.2em 0; }

/* ========================================================================== Headings ========================================================================== */
/** Each heading also has a class so that you can apply the size to a different heading if you need to. */
/* line 7, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h1, .alpha { font-size: 2em; line-height: 1.5em; margin-bottom: 0.75em; }

/* line 11, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h2, .beta { font-size: 1.75em; line-height: 1.71429em; margin-bottom: 0.85714em; }

/* line 15, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h3, .gamma { font-size: 1.5em; line-height: 2em; margin-bottom: 1em; }

/* line 19, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h4, .delta { font-size: 1.3125em; line-height: 2.28571em; margin-bottom: 1.14286em; }

/* line 23, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h5, .epsilon { font-size: 1.125em; line-height: 1.33333em; margin-bottom: 1.33333em; }

/* line 27, /Users/dgillhespy/projects/devtroit/scales/base/_headings.scss */
h6, .zeta { font-size: 1em; line-height: 1.5em; margin-bottom: 1.5em; }

/* ========================================================================== Quotes ========================================================================== */
/* Put quotes around q and blockquote elements. */
/* line 8, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
q { quotes: "“" "”" "‘" "’"; }

/* line 12, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
q:before { content: "“"; content: open-quote; }

/* line 16, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
q:after { content: "”"; content: close-quote; }

/* line 20, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
q q:before { content: "‘"; content: open-quote; }

/* line 24, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
q q:after { content: "’"; content: close-quote; }

/* line 28, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote { quotes: "“" "”"; }

/* line 32, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote p:before { content: ""; content: no-open-quote; }

/* line 36, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote p:first-of-type:before { content: "“"; content: open-quote; }

/* line 40, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote p:after { content: ""; content: no-close-quote; }

/* line 44, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote p:last-of-type:after { content: "”"; content: close-quote; }

/* See http://alistapart.com/blog/post/more-thoughts-about-blockquotes-than-are-strictly-required for rational of using <figure>. Not required for these styles to work, but good semantics.  <figure class="quote"> <blockquote> <p>It is the unofficial force—the Baker Street irregulars.</p> </blockquote> <figcaption class="source">Sherlock Holmes, <cite>Sign of Four</cite></figcaption> </figure>  */
/* line 62, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote p { margin-top: 0em; padding-top: 0em; padding-bottom: 0em; margin-bottom: 0.375em; }
/* line 66, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
blockquote, blockquote p:last-of-type { margin-bottom: 0; }

/* line 71, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
.source { display: block; text-indent: 0; }
/* line 75, /Users/dgillhespy/projects/devtroit/scales/base/_quotes.scss */
.source:before { content: "—"; }

/* ========================================================================== Code ========================================================================== */
/* line 4, /Users/dgillhespy/projects/devtroit/scales/base/_code.scss */
pre, code { font-family: menlo, monospace, sans-serif; }

/* line 8, /Users/dgillhespy/projects/devtroit/scales/base/_code.scss */
pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; padding: 0 16px 0 24px; margin-bottom: 1.5em; background-color: #444; color: #fff; }

/* ========================================================================== Links ========================================================================== */
/* Set colors in _vars.scss. */
/* line 8, /Users/dgillhespy/projects/devtroit/scales/base/_links.scss */
a { color: blue; text-decoration: none; }
/* line 14, /Users/dgillhespy/projects/devtroit/scales/base/_links.scss */
a:hover, a:active, a:focus { color: darkblue; text-decoration: underline; }

/* Current state, like the currently selected nav item.  <ul class="nav"> <li><a href=#>Home</a></li> <li><a href=#>About</a></li> <li class="current"><a href=#>Portfolio</a></li> <li><a href=#>Contact</a></li> </ul>  */
/* line 31, /Users/dgillhespy/projects/devtroit/scales/base/_links.scss */
.current a { cursor: default; text-decoration: underline; }

/* ========================================================================== Images ========================================================================== */
/* line 4, /Users/dgillhespy/projects/devtroit/scales/base/_images.scss */
img, object { max-width: 100%; height: auto; }

/* line 9, /Users/dgillhespy/projects/devtroit/scales/base/_images.scss */
figure > img { display: block; }

/* ========================================================================== Lists ========================================================================== */
/* Remove vertical spacing from nested lists. */
/* line 10, /Users/dgillhespy/projects/devtroit/scales/base/_lists.scss */
li > ul, li > ol { margin-bottom: 0; }

/* ========================================================================== Tables ========================================================================== */
/* Tables can get pretty crazy. Take a look at this example to see all of the helper classes Scales gives you and how to use them:  <table class="table--bordered  table--striped"> <colgroup> <col class="col20"> <col class="col30"> <col class="col10"> <col> </colgroup> <thead> <tr> <th colspan="3">Foo</th> <th>Bar</th> </tr> <tr> <th>Lorem</th> <th>Ipsum</th> <th>Dolor</th> <th>Sit</th> </tr> </thead> <tbody> <tr> <th rowspan="3">Sit</th> <td>Dolor</td> <td class="numerical">03.788</td> <td>Lorem</td> </tr> <tr> <td>Dolor</td> <td class="numerical">32.210</td> <td>Lorem</td> </tr> <tr> <td>Dolor</td> <td class="numerical">47.797</td> <td>Lorem</td> </tr> <tr> <th rowspan="2">Sit</th> <td>Dolor</td> <td class="numerical">09.640</td> <td>Lorem</td> </tr> <tr> <td>Dolor</td> <td class="numerical">12.117</td> <td>Lorem</td> </tr> </tbody> </table>  */
/* line 59, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
table { width: 100%; }

/* line 64, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
th, td { padding: 0 0.625em; margin-top: 0em; padding-top: 0.375em; padding-bottom: 0.375em; margin-bottom: 0em; text-align: left; }
@media screen and (min-width: 30.0625em) { /* line 64, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
  th, td { padding: 0 0.75em; margin-top: 0em; padding-top: 0.75em; padding-bottom: 0.75em; margin-bottom: 0em; } }

/* Cell alignments */
/* line 78, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
[colspan] { text-align: center; }

/* line 81, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
[colspan="1"] { text-align: left; }

/* line 84, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
[rowspan] { vertical-align: middle; }

/* line 87, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
[rowspan="1"] { vertical-align: top; }

/* line 90, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.numerical { text-align: right; }

/* In the example markup above you can see several <col> elements with classes whose numbers represent a percentage width for that column. You can leave one of the cols class-less and it will take up whatever space is left over. You can also use these classes on the <table> element to restrict the width of the whole table. */
/* line 100, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t5 { width: 5%; }

/* line 101, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t10 { width: 10%; }

/* line 102, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t12 { width: 12.5%; }

/* 1/8 */
/* line 103, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t15 { width: 15%; }

/* line 104, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t20 { width: 20%; }

/* line 105, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t25 { width: 25%; }

/* 1/4 */
/* line 106, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t30 { width: 30%; }

/* line 107, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t33 { width: 33.333%; }

/* 1/3 */
/* line 108, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t35 { width: 35%; }

/* line 109, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t37 { width: 37.5%; }

/* 3/8 */
/* line 110, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t40 { width: 40%; }

/* line 111, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t45 { width: 45%; }

/* line 112, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t50 { width: 50%; }

/* 1/2 */
/* line 113, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t55 { width: 55%; }

/* line 114, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t60 { width: 60%; }

/* line 115, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t62 { width: 62.5%; }

/* 5/8 */
/* line 116, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t65 { width: 65%; }

/* line 117, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t66 { width: 66.666%; }

/* 2/3 */
/* line 118, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t70 { width: 70%; }

/* line 119, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t75 { width: 75%; }

/* 3/4*/
/* line 120, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t80 { width: 80%; }

/* line 121, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t85 { width: 85%; }

/* line 122, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t87 { width: 87.5%; }

/* 7/8 */
/* line 123, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t90 { width: 90%; }

/* line 124, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.t95 { width: 95%; }

/* Bordered tables  This uses Compass Vertical Rhythm's "rhythm-borders" to apply borders and whitespace equally to all sides.  */
/* line 137, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.table--bordered th, .table--bordered td { border-style: solid; border-width: 0.0625em; padding: 1.4375em; }
/* line 140, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.table--bordered th:empty, .table--bordered td:empty { border: none; }

/* Striped tables */
/* line 153, /Users/dgillhespy/projects/devtroit/scales/base/_tables.scss */
.table--striped tbody tr:nth-of-type(odd) { background-color: lightgrey; /* Override this color in your own partial */ }

/* ========================================================================== Forms ========================================================================== */
/* line 5, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
fieldset { margin-top: 0em; padding-top: 1.5em; padding-bottom: 0em; margin-bottom: 0em; }

/* **NOTE** on Text inputs.  Instead of a `[type]` selector for each kind of form input, we just use a class to target any/every one, e.g.: <input type="text" class="text-input"> <input type="email" class="text-input"> <input type="password" class="text-input">  You should style .text-input and textarea in your own partial.  */
/* Use an unordered list to mark up your groups of form fields.  <ul class="form-fields"> <li> <label /> <input /> </li> <li> <label /> <select /> </li> <li> <label /> <input /> </li> </ul>  */
/* line 42, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.form-fields, .check-list { list-style: none; margin: 0; }

/* line 47, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.form-fields > li, .check-list > li { margin-bottom: 1.5em; }

/* Labels  The ".label" class can be used to make an element look like a label if an actual label isn't suitable.  */
/* line 59, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
label, .label { display: block; }

/* Extra help text in labels.  <label>Username <small class="additional">No special characters</small></label>  */
/* line 69, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.additional { display: block; font-weight: normal; }

/* Groups of checkboxes and radios.  <li> <ul class="check-list"> <li> <input /> <label /> </li> <li> <input /> <label /> </li> </ul> </li>  */
/* Labels in check-lists. */
/* line 99, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.check-label, .check-list label, .check-list .label { display: inline-block; }

/* Extra help text displayed after a field when that field is in focus.  <label for="email">Username:</label> <input type="email" id="email" class="text-input"> <span class="extra-help">Enter your email address</span>  We leave the help text in the document flow and merely set it to `visibility: hidden;`. This means that it won’t interfere with anything once it reappears.  */
/* line 116, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.extra-help { display: none; }

/* line 120, /Users/dgillhespy/projects/devtroit/scales/base/_forms.scss */
.text-input:active + .extra-help, .text-input:focus + .extra-help { display: inline-block; }

/* These are OOCSS based design patterns. If you come up with new one's, please contribute on github!  If you don't need a pattern, comment out the line and it wont be included in your project. */
/* ========================================================================== Navigation ========================================================================== */
/** Nav abstraction. On small screens, .nav simply removes list markers and left margin, applies clearfix, and makes the <li> and <a> display block. Style in your nav partial.  usage:  <ul class="nav"> <li><a href=#>Home</a></li> <li><a href=#>About</a></li> <li><a href=#>Portfolio</a></li> <li><a href=#>Contact</a></li> </ul>  */
/* line 20, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
[class*="nav"] { list-style-type: none; margin-left: 0; }
/* line 28, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
[class*="nav"] > li, [class*="nav"] > li > a { display: block; }

/* Make nav--keywords horizontal instead of stacking them. */
/* Makes a list of comma separated keywords. Extends .nav.  usage:  <ul class="nav--keywords>  */
/* line 59, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
.nav--keywords > li:after { content: ", "; }
/* line 63, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
.nav--keywords > li:last-child:after { display: none; }

/* Nav abstractions on screens larger than $palm-end. */
@media screen and (min-width: 30.0625em) { /* Makes the .nav horizontal */
  /* line 81, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
  [class*="nav"] > li, [class*="nav"] > li > a { display: inline-block; }
  /* Force nav to occupy 100% of the available width of its parent. Extends .nav.  usage:  <ul class="nav--fit>  */
  /* line 96, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
  .nav--fit { display: table; width: 100%; }
  /* line 100, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
  .nav--fit > li { display: table-cell; }
  /* line 103, /Users/dgillhespy/projects/devtroit/scales/patterns/_nav.scss */
  .nav--fit > li > a { display: block; } }
/* ========================================================================== Pagination ========================================================================== */
/* Basic pagination object, extends .nav.  <ol class="nav--pagination"> <li class="nav--pagination__first">First</li> <li class="nav--pagination__prev">Previous</li> <li><a href=/page/1>1</a></li> <li><a href=/page/2>2</a></li> <li class=current><a href=/page/3>3</a></li> <li><a href=/page/4>4</a></li> <li><a href=/page/5>5</a></li> <li class="nav--pagination__next"><a href=/page/next>Next</a></li> <li class="nav--pagination__last"><a href=/page/last>Last</a></li> </ol>  */
/* line 21, /Users/dgillhespy/projects/devtroit/scales/patterns/_pagination.scss */
.nav--pagination { text-align: center; /* Remove whitespace caused by inline-block. */ letter-spacing: -0.31em; word-spacing: -0.43em; }

/* line 30, /Users/dgillhespy/projects/devtroit/scales/patterns/_pagination.scss */
.nav--pagination > li { padding: 0 0.5em; letter-spacing: normal; word-spacing: normal; }

/* line 41, /Users/dgillhespy/projects/devtroit/scales/patterns/_pagination.scss */
.nav--pagination__first a:before { content: "« "; }

/* line 45, /Users/dgillhespy/projects/devtroit/scales/patterns/_pagination.scss */
.nav--pagination__last a:after { content: " »"; }

/* ========================================================================== Breadcrumb ========================================================================== */
/* Make breadcrumbs horizontal instead of stacked */
/* Simple breadcrumb styling to apply to ordered lists. Extends .nav  <ol class="nav--breadcrumb"> <li><a href=#>Scales</a></li> <li><a href=#>Patterns</a></li> <li>Breadcrumb</li> </ol>  */
/* line 27, /Users/dgillhespy/projects/devtroit/scales/patterns/_breadcrumb.scss */
.nav--breadcrumb > li + li:before { content: "» "; }

/* Path-like structure for breadcrumbs. Extends .nav  <ol class="nav--breadcrumb--path"> <li class="nav--breadcrumb__root"><a href=#>Scales</a></li> <li><a href=#>Patterns</a></li> <li>Breadcrumb</li> </ol>  */
/* line 42, /Users/dgillhespy/projects/devtroit/scales/patterns/_breadcrumb.scss */
.nav--breadcrumb--path > li + li:before { content: "/ "; }

/* Assign a delimiter through a data attribute  <ol class="nav--breadcrumb"> <li><a href=#>Scales</a></li> <li data-breadcrumb="|"><a href=#>Patterns</a></li> <li data-breadcrumb="|"><a href=#>Breadcrumb</a></li> </ol>  */
/* line 57, /Users/dgillhespy/projects/devtroit/scales/patterns/_breadcrumb.scss */
.nav--breadcrumb > li + li[data-breadcrumb]:before { content: attr(data-breadcrumb) " "; }

/* The root of the tree. */
/* line 65, /Users/dgillhespy/projects/devtroit/scales/patterns/_breadcrumb.scss */
.nav--breadcrumb__root { font-weight: bold; }

/* ========================================================================== Media ========================================================================== */
/* Use the media pattern any time you have an image and text next to each other.  The media element is probably the most useful OOCSS abstraction. Read more here: stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code  Usage:  <div class="media"> <img src="images/your-image.png" alt="" class="media__fig"> <p class="media__body">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p> </div>  */
/* line 20, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media { display: block; }

/* line 25, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media__fig { float: left; margin-right: 0.5625em; }

/* Reversed image location (right instead of left). */
/* line 33, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media__fig--rev { float: right; margin-left: 0.5625em; }

/* line 39, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media__fig img, .media__fig--rev img { display: block; }

/* line 43, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media__body { overflow: hidden; }

/* line 48, /Users/dgillhespy/projects/devtroit/scales/patterns/_media.scss */
.media__body, .media__body > :last-child { margin-bottom: 0; }

/* ========================================================================== Island ========================================================================== */
/* Boxed off content  <div class="island"> I am boxed off. </div>  */
/* line 14, /Users/dgillhespy/projects/devtroit/scales/patterns/_island.scss */
[class*="island"], [class*="islet"] { display: block; }

/* line 19, /Users/dgillhespy/projects/devtroit/scales/patterns/_island.scss */
[class*="island"] { padding: 0 1.5em; margin-top: 0em; padding-top: 1.5em; padding-bottom: 1.5em; margin-bottom: 0em; }

/* line 25, /Users/dgillhespy/projects/devtroit/scales/patterns/_island.scss */
[class*="island"] > :last-child, [class*="islet"] > :last-child { margin-bottom: 0; }

/* Just like .island, only smaller. */
/* line 33, /Users/dgillhespy/projects/devtroit/scales/patterns/_island.scss */
[class*="islet"] { padding: 0 0.75em; margin-top: 0em; padding-top: 0.75em; padding-bottom: 0.75em; margin-bottom: 0em; }

/* ========================================================================== Block List ========================================================================== */
/* A list with top and bottom borders  <ul class="block-list"> <li>Foo</li> <li>Bar</li> <li>Baz</li> </ul>  Extend this object in your own partial to give it more style.  */
/* line 19, /Users/dgillhespy/projects/devtroit/scales/patterns/_block-list.scss */
[class*="block-list"], [class*="block-list"] > li { border-color: #ccc; /* Override this color in your own partial */ }

/* line 23, /Users/dgillhespy/projects/devtroit/scales/patterns/_block-list.scss */
[class*="block-list"] { list-style: none; margin-left: 0; border-top-style: solid; border-top-width: 0.0625em; padding-top: 1.4375em; padding-top: 0; }
/* line 29, /Users/dgillhespy/projects/devtroit/scales/patterns/_block-list.scss */
[class*="block-list"] > li { border-bottom-style: solid; border-bottom-width: 0.0625em; padding-bottom: 1.4375em; padding-top: 1.5em; }

/* ========================================================================== Multi-List ========================================================================== */
/* This helps create a multi-column list out of a single list.  <ul class="multi-list four-columns"> <li>Lorem</li> <li>Ipsum</li> <li>Dolor</li> <li>Sit</li> </ul>  */
/* line 16, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
[class*="multi-list"] { list-style: none; margin-left: 0; }

/* line 22, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
[class*="multi-list"] > li { float: left; }

/* Apply these classes alongside the .multi-list class on lists to determine how wide their columns are. */
/* line 31, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
.two-columns > li { width: 50%; }

/* line 34, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
.three-columns > li { width: 33.333%; }

/* line 37, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
.four-columns > li { width: 25%; }

/* line 40, /Users/dgillhespy/projects/devtroit/scales/patterns/_multi-list.scss */
.five-columns > li { width: 20%; }

/* ========================================================================== Split ========================================================================== */
/** Simple split item for creating two elements floated away from one another. You can do a lot of stuff with this, like:  <dl class="split websites"> <dt class="split__title">Google</dt> <dd>google.com</dd> <dt class="split__title">Wikipedia</dt> <dd>wikipedia.org</dd> <dt class="split__title">CNN</dt> <dd>cnn.com</dd> </dl>  or  <ul class="split inventory"> <li><span class="split__title">Noodles</span> 600</li> <li><span class="split__title">Sauce</span> 250</li> <li><span class="split__title">Mushrooms</span> 530</li> </ul>​  */
/* line 27, /Users/dgillhespy/projects/devtroit/scales/patterns/_split.scss */
.split { text-align: right; list-style: none; margin-left: 0; }

/* line 33, /Users/dgillhespy/projects/devtroit/scales/patterns/_split.scss */
.split__title { text-align: left; float: left; clear: left; }

/* ========================================================================== Link Complex ========================================================================== */
/* Add hover behaviour to only selected items within links.  <a href="" class="link-complex"> <span class="link-complex__target">Log in</span> to your account. </a>  */
/* line 16, /Users/dgillhespy/projects/devtroit/scales/patterns/_link-complex.scss */
.link-complex, .link-complex:hover, .link-complex:active, .link-complex:focus { text-decoration: none; }

/* line 22, /Users/dgillhespy/projects/devtroit/scales/patterns/_link-complex.scss */
.link-complex:hover .link-complex__target, .link-complex:active .link-complex__target, .link-complex:focus .link-complex__target { text-decoration: underline; }

/* ========================================================================== Buttons ========================================================================== */
/* Basic button structural styling. Extend in your own partial.  */
/* line 9, /Users/dgillhespy/projects/devtroit/scales/patterns/_buttons.scss */
[class*="btn"] { font: inherit; cursor: pointer; border: none; display: inline-block; margin-top: 0em; padding-top: 0.375em; padding-bottom: 0.375em; margin-bottom: 0.75em; padding-right: 16px; padding-left: 16px; }

/* line 20, /Users/dgillhespy/projects/devtroit/scales/patterns/_buttons.scss */
[class*="btn"], [class*="btn"]:hover { text-decoration: none; }

/* Basic button modifiers */
/* line 27, /Users/dgillhespy/projects/devtroit/scales/patterns/_buttons.scss */
.btn--small { font-size: 12px; }

/* line 28, /Users/dgillhespy/projects/devtroit/scales/patterns/_buttons.scss */
.btn--large { font-size: 24px; }

/* line 30, /Users/dgillhespy/projects/devtroit/scales/patterns/_buttons.scss */
.btn--full { display: block; text-align: center; /* The following is so that .btn-full works properly on <input> as well as <a>. */ padding-right: 0; padding-left: 0; width: 100%; }

/* ========================================================================== Stats ========================================================================== */
/* Simple object to display statistic-like information.  <div class="stat-group"> <dl class="stat"> <dt class="stat__title">Noodles</dt> <dd class="stat__value">600</dd> </dl>
 <dl class="stat"> <dt class="stat__title">Sauce</dt> <dd class="stat__value">250</dd> </dl>
 <dl class="stat"> <dt class="stat__title">Mushrooms</dt> <dd class="stat__value">530</dd> </dl> </div>  */
/* line 26, /Users/dgillhespy/projects/devtroit/scales/patterns/_stats.scss */
.stat-group { margin-left: 0; }

/* line 31, /Users/dgillhespy/projects/devtroit/scales/patterns/_stats.scss */
.stat { float: left; margin-left: 1em; }

/* line 36, /Users/dgillhespy/projects/devtroit/scales/patterns/_stats.scss */
.stat > a { display: block; }

/* line 40, /Users/dgillhespy/projects/devtroit/scales/patterns/_stats.scss */
.stat:first-of-type, .stat__value { margin-left: 0; }

/* Utility styles that need come later in the cascade */
/* ========================================================================== Placeholders ========================================================================== */
/* Extend the clearfix placeholder: @extend %clearfix. */
/* line 10, /Users/dgillhespy/projects/devtroit/scales/utilities/_placeholders.scss */
[class*="nav"]:before, .media:before, [class*="island"]:before, [class*="islet"]:before, [class*="multi-list"]:before, .stat-group:before, [class*="nav"]:after, .media:after, [class*="island"]:after, [class*="islet"]:after, [class*="multi-list"]:after, .stat-group:after { content: " "; display: table; }
/* line 15, /Users/dgillhespy/projects/devtroit/scales/utilities/_placeholders.scss */
[class*="nav"]:after, .media:after, [class*="island"]:after, [class*="islet"]:after, [class*="multi-list"]:after, .stat-group:after { clear: both; }

/* Placeholder to make something horizontal. */
/* line 24, /Users/dgillhespy/projects/devtroit/scales/utilities/_placeholders.scss */
.nav--keywords > li, .nav--keywords > li > a, .nav--pagination > li, .nav--pagination > li > a, .nav--breadcrumb > li, .nav--breadcrumb > li > a, .nav--breadcrumb--path > li, .nav--breadcrumb--path > li > a { display: inline-block; }

/* A background image for making sure your elements line up to you baseline.  Uncomment to use. */
/* line 31, ../style.scss */
html { background-image: -webkit-gradient(linear, 50% 100%, 50% 0%, color-stop(5%, #ffc0cb), color-stop(5%, rgba(255, 192, 203, 0))); background-image: -webkit-linear-gradient(bottom, #ffc0cb 5%, rgba(255, 192, 203, 0) 5%); background-image: -moz-linear-gradient(bottom, #ffc0cb 5%, rgba(255, 192, 203, 0) 5%); background-image: -o-linear-gradient(bottom, #ffc0cb 5%, rgba(255, 192, 203, 0) 5%); background-image: linear-gradient(bottom, #ffc0cb 5%, rgba(255, 192, 203, 0) 5%); -webkit-background-size: 100% 1.5em; -moz-background-size: 100% 1.5em; -o-background-size: 100% 1.5em; background-size: 100% 1.5em; background-position: left top; }

/* This is where you start importing all of your partials.  If you are styling objects from Scales, I recommend creating a partial with the same name as the one in Scales and importing it here.  Example: use @import "partials/nav" if you are adding style to the nav object. */
